{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  config: ChartConfig\n  children: React.ComponentProps<\n    typeof RechartsPrimitive.ResponsiveContainer\n  >[\"children\"]\n}) {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-slot=\"chart\"\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n}\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nfunction ChartTooltipContent({\n  active,\n  payload,\n  className,\n  indicator = \"dot\",\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n  React.ComponentProps<\"div\"> & {\n    hideLabel?: boolean\n    hideIndicator?: boolean\n    indicator?: \"line\" | \"dot\" | \"dashed\"\n    nameKey?: string\n    labelKey?: string\n  }) {\n  const { config } = useChart()\n\n  const tooltipLabel = React.useMemo(() => {\n    if (hideLabel || !payload?.length) {\n      return null\n    }\n\n    const [item] = payload\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n    const itemConfig = getPayloadConfigFromPayload(config, item, key)\n    const value =\n      !labelKey && typeof label === \"string\"\n        ? config[label as keyof typeof config]?.label || label\n        : itemConfig?.label\n\n    if (labelFormatter) {\n      return (\n        <div className={cn(\"font-medium\", labelClassName)}>\n          {labelFormatter(value, payload)}\n        </div>\n      )\n    }\n\n    if (!value) {\n      return null\n    }\n\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n  }, [\n    label,\n    labelFormatter,\n    payload,\n    hideLabel,\n    labelClassName,\n    config,\n    labelKey,\n  ])\n\n  if (!active || !payload?.length) {\n    return null\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n  return (\n    <div\n      className={cn(\n        \"border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl\",\n        className\n      )}\n    >\n      {!nestLabel ? tooltipLabel : null}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n          const indicatorColor = color || item.payload.fill || item.color\n\n          return (\n            <div\n              key={item.dataKey}\n              className={cn(\n                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\n                indicator === \"dot\" && \"items-center\"\n              )}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn(\n                          \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\n                          {\n                            \"h-2.5 w-2.5\": indicator === \"dot\",\n                            \"w-1\": indicator === \"line\",\n                            \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                              indicator === \"dashed\",\n                            \"my-0.5\": nestLabel && indicator === \"dashed\",\n                          }\n                        )}\n                        style={\n                          {\n                            \"--color-bg\": indicatorColor,\n                            \"--color-border\": indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn(\n                      \"flex flex-1 justify-between leading-none\",\n                      nestLabel ? \"items-end\" : \"items-center\"\n                    )}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">\n                        {itemConfig?.label || item.name}\n                      </span>\n                    </div>\n                    {item.value && (\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nfunction ChartLegendContent({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = \"bottom\",\n  nameKey,\n}: React.ComponentProps<\"div\"> &\n  Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n    hideIcon?: boolean\n    nameKey?: string\n  }) {\n  const { config } = useChart()\n\n  if (!payload?.length) {\n    return null\n  }\n\n  return (\n    <div\n      className={cn(\n        \"flex items-center justify-center gap-4\",\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n        className\n      )}\n    >\n      {payload.map((item) => {\n        const key = `${nameKey || item.dataKey || \"value\"}`\n        const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n        return (\n          <div\n            key={item.value}\n            className={cn(\n              \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\"\n            )}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/useInvestmentSimulation.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { BinanceWallet } from './useBinanceWallet';\n\ninterface Trade {\n  id: string;\n  date: Date;\n  type: 'BUY' | 'SELL' | 'STOP_LOSS' | 'TRAILING_STOP';\n  project: string;\n  amount: number;\n  result: number;\n}\n\ninterface Portfolio {\n  totalCapital: number;\n  investedCapital: number;\n  profit: number;\n  trades: Trade[];\n  chartData: Array<{\n    name: string;\n    value: number;\n  }>;\n}\n\nconst INITIAL_CAPITAL = 1000;\nconst INVESTMENT_PER_PROJECT = 100;\nconst STOP_LOSS_PERCENTAGE = 0.5; // 50%\nconst TRAILING_STOP_THRESHOLD = 3; // 200% profit = 3x initial value\n\ninterface InvestmentSimulationProps {\n  binanceWallet: BinanceWallet | null;\n  isConnected: boolean;\n}\n\nexport function useInvestmentSimulation({ \n  binanceWallet = null, \n  isConnected = false \n}: Partial<InvestmentSimulationProps> = {}) {\n  const [isSimulating, setIsSimulating] = useState(false);\n  const [portfolio, setPortfolio] = useState<Portfolio>({\n    totalCapital: (binanceWallet?.balance ?? INITIAL_CAPITAL),\n    investedCapital: 0,\n    profit: 0,\n    trades: [],\n    chartData: [{ name: 'Initial', value: (binanceWallet?.balance ?? INITIAL_CAPITAL) }]\n  });\n\n  // Update portfolio when wallet changes\n  useEffect(() => {\n    if (binanceWallet) {\n      setPortfolio(prev => ({\n        ...prev,\n        totalCapital: binanceWallet.balance,\n        chartData: [...prev.chartData, {\n          name: new Date().toLocaleTimeString(),\n          value: binanceWallet.balance\n        }]\n      }));\n    }\n  }, [binanceWallet?.balance]);\n\n  // Simulated project data\n  const generateRandomProject = () => {\n    const projectNames = ['Alpha-1', 'Alpha-2', 'Alpha-3', 'Alpha-4', 'Alpha-5'];\n    const randomName = projectNames[Math.floor(Math.random() * projectNames.length)];\n    const initialPrice = INVESTMENT_PER_PROJECT;\n    \n    return {\n      name: randomName,\n      price: initialPrice,\n      stopLoss: initialPrice * STOP_LOSS_PERCENTAGE,\n      trailingStop: initialPrice * TRAILING_STOP_THRESHOLD\n    };\n  };\n\n  const addTrade = useCallback((trade: Omit<Trade, 'id' | 'date'>) => {\n    const newTrade: Trade = {\n      id: Math.random().toString(36).substr(2, 9),\n      date: new Date(),\n      ...trade\n    };\n\n    setPortfolio(prev => {\n      const newTotal = prev.totalCapital + trade.result;\n      return {\n        ...prev,\n        totalCapital: newTotal,\n        investedCapital: trade.type === 'BUY' \n          ? prev.investedCapital + trade.amount \n          : prev.investedCapital - trade.amount,\n        profit: prev.profit + trade.result,\n        trades: [newTrade, ...prev.trades],\n        chartData: [...prev.chartData, {\n          name: new Date().toLocaleTimeString(),\n          value: newTotal\n        }]\n      };\n    });\n  }, []);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const simulateTrading = useCallback(async () => {\n    if (!isConnected || !binanceWallet) {\n      if (portfolio.totalCapital < INVESTMENT_PER_PROJECT) {\n        setIsSimulating(false);\n        return;\n      }\n    } else if (binanceWallet.availableBalance < INVESTMENT_PER_PROJECT) {\n      setIsSimulating(false);\n      return;\n    }\n\n    setIsLoading(true);\n    const project = generateRandomProject();\n    \n    try {\n      // Lock funds for investment if connected to Binance\n      if (isConnected && binanceWallet) {\n        binanceWallet.lockFunds(INVESTMENT_PER_PROJECT);\n      }\n\n      // Simulate buy with delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      addTrade({\n        type: 'BUY',\n        project: project.name,\n        amount: INVESTMENT_PER_PROJECT,\n        result: -INVESTMENT_PER_PROJECT\n      });\n    } catch (error) {\n      console.error('Failed to execute trade:', error);\n      setIsLoading(false);\n      setIsSimulating(false);\n      return;\n    }\n\n    // Simulate price movements with delays\n    const simulatePrice = async () => {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const priceChange = (Math.random() - 0.45) * 0.2;\n      project.price = project.price * (1 + priceChange);\n\n      if (project.price <= project.stopLoss) {\n        const loss = -(INVESTMENT_PER_PROJECT * 0.5);\n        if (isConnected && binanceWallet) {\n          binanceWallet.unlockFunds(INVESTMENT_PER_PROJECT, loss);\n        }\n        addTrade({\n          type: 'STOP_LOSS',\n          project: project.name,\n          amount: INVESTMENT_PER_PROJECT,\n          result: loss\n        });\n        setIsLoading(false);\n        return true;\n      }\n\n      if (project.price >= project.trailingStop) {\n        const profit = INVESTMENT_PER_PROJECT * 2;\n        if (isConnected && binanceWallet) {\n          binanceWallet.unlockFunds(INVESTMENT_PER_PROJECT, profit);\n        }\n        addTrade({\n          type: 'TRAILING_STOP',\n          project: project.name,\n          amount: INVESTMENT_PER_PROJECT,\n          result: profit\n        });\n        setIsLoading(false);\n        return true;\n      }\n\n      // Update chart data with current price\n      setPortfolio(prev => ({\n        ...prev,\n        chartData: [...prev.chartData, {\n          name: new Date().toLocaleTimeString(),\n          value: prev.totalCapital + (project.price - INVESTMENT_PER_PROJECT)\n        }]\n      }));\n\n      return false;\n    };\n\n    let attempts = 0;\n    const maxAttempts = 10;\n    \n    while (attempts < maxAttempts) {\n      const shouldStop = await simulatePrice();\n      if (shouldStop) break;\n      attempts++;\n    }\n\n    if (attempts >= maxAttempts) {\n      // Force exit with trailing stop if max attempts reached\n      const profit = INVESTMENT_PER_PROJECT * 1.5;\n      if (isConnected && binanceWallet) {\n        binanceWallet.unlockFunds(INVESTMENT_PER_PROJECT, profit);\n      }\n      addTrade({\n        type: 'TRAILING_STOP',\n        project: project.name,\n        amount: INVESTMENT_PER_PROJECT,\n        result: profit\n      });\n    }\n\n    setIsLoading(false);\n  }, [portfolio.totalCapital, addTrade]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    \n    if (isSimulating) {\n      timeoutId = setTimeout(async () => {\n        await simulateTrading();\n        if (isSimulating) {\n          // Schedule next trade if still simulating\n          timeoutId = setTimeout(() => simulateTrading(), 1000);\n        }\n      }, 1000);\n    }\n\n    return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [isSimulating, simulateTrading]);\n\n  const startSimulation = () => {\n    if (isConnected && binanceWallet) {\n      if (binanceWallet.availableBalance < INVESTMENT_PER_PROJECT) {\n        alert('Insufficient funds to start simulation. Please add more funds to your wallet.');\n        return;\n      }\n    }\n    setIsSimulating(true);\n  };\n  const stopSimulation = () => setIsSimulating(false);\n  const resetSimulation = () => {\n    setIsSimulating(false);\n    setPortfolio({\n      totalCapital: INITIAL_CAPITAL,\n      investedCapital: 0,\n      profit: 0,\n      trades: [],\n      chartData: [{ name: 'Initial', value: INITIAL_CAPITAL }]\n    });\n  };\n\n  return {\n    portfolio,\n    isSimulating,\n    isLoading,\n    startSimulation,\n    stopSimulation,\n    resetSimulation\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/useBinanceWallet.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\n\ninterface BinanceCredentials {\n  apiKey: string\n  secretKey: string\n}\n\nexport interface BinanceWallet {\n  balance: number\n  availableBalance: number\n  lockedBalance: number\n  lockFunds: (amount: number) => void\n  unlockFunds: (amount: number, profit: number) => void\n}\n\nexport function useBinanceConnection() {\n  const [isConnected, setIsConnected] = useState(false)\n  const [credentials, setCredentials] = useState<BinanceCredentials | null>(null)\n  const [wallet, setWallet] = useState<BinanceWallet | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  const initializeWallet = (initialBalance: number = 1000) => {\n    const lockFunds = (amount: number) => {\n      setWallet(prev => {\n        if (!prev || amount > prev.availableBalance) {\n          throw new Error('Insufficient funds')\n        }\n        return {\n          ...prev,\n          availableBalance: prev.availableBalance - amount,\n          lockedBalance: prev.lockedBalance + amount\n        } as BinanceWallet\n      })\n    }\n\n    const unlockFunds = (amount: number, profit: number) => {\n      setWallet(prev => {\n        if (!prev) return prev\n        return {\n          ...prev,\n          balance: prev.balance + profit,\n          availableBalance: prev.availableBalance + amount + profit,\n          lockedBalance: prev.lockedBalance - amount\n        } as BinanceWallet\n      })\n    }\n\n    const newWallet: BinanceWallet = {\n      balance: initialBalance,\n      availableBalance: initialBalance,\n      lockedBalance: 0,\n      lockFunds,\n      unlockFunds\n    }\n\n    setWallet(newWallet)\n  }\n\n  // Load saved credentials from localStorage on mount\n  useEffect(() => {\n    const savedCredentials = localStorage.getItem('binance_credentials')\n    if (savedCredentials) {\n      try {\n        const parsed = JSON.parse(savedCredentials)\n        setCredentials(parsed)\n        setIsConnected(true)\n        initializeWallet(1000)\n      } catch (e) {\n        console.error('Failed to parse saved credentials:', e)\n      }\n    }\n  }, [])\n\n  const connect = async (apiKey: string, secretKey: string) => {\n    try {\n      const credentials = { apiKey, secretKey }\n      localStorage.setItem('binance_credentials', JSON.stringify(credentials))\n      setCredentials(credentials)\n      setIsConnected(true)\n      initializeWallet(1000)\n      setError(null)\n    } catch (e) {\n      setError('Failed to connect to Binance. Please check your credentials.')\n      throw e\n    }\n  }\n\n  const disconnect = () => {\n    localStorage.removeItem('binance_credentials')\n    setCredentials(null)\n    setIsConnected(false)\n    setWallet(null)\n  }\n\n  return {\n    isConnected,\n    wallet,\n    error,\n    connect,\n    disconnect\n  }\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAiBO,SAAS;;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA6B;IAC1E,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB;IAC3D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,mBAAmB,CAAC,iBAAyB,IAAI;QACrD,MAAM,YAAY,CAAC;YACjB,UAAU,CAAA;gBACR,IAAI,CAAC,QAAQ,SAAS,KAAK,gBAAgB,EAAE;oBAC3C,MAAM,IAAI,MAAM;gBAClB;gBACA,OAAO;oBACL,GAAG,IAAI;oBACP,kBAAkB,KAAK,gBAAgB,GAAG;oBAC1C,eAAe,KAAK,aAAa,GAAG;gBACtC;YACF;QACF;QAEA,MAAM,cAAc,CAAC,QAAgB;YACnC,UAAU,CAAA;gBACR,IAAI,CAAC,MAAM,OAAO;gBAClB,OAAO;oBACL,GAAG,IAAI;oBACP,SAAS,KAAK,OAAO,GAAG;oBACxB,kBAAkB,KAAK,gBAAgB,GAAG,SAAS;oBACnD,eAAe,KAAK,aAAa,GAAG;gBACtC;YACF;QACF;QAEA,MAAM,YAA2B;YAC/B,SAAS;YACT,kBAAkB;YAClB,eAAe;YACf;YACA;QACF;QAEA,UAAU;IACZ;IAEA,oDAAoD;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,MAAM,mBAAmB,aAAa,OAAO,CAAC;YAC9C,IAAI,kBAAkB;gBACpB,IAAI;oBACF,MAAM,SAAS,KAAK,KAAK,CAAC;oBAC1B,eAAe;oBACf,eAAe;oBACf,iBAAiB;gBACnB,EAAE,OAAO,GAAG;oBACV,QAAQ,KAAK,CAAC,sCAAsC;gBACtD;YACF;QACF;yCAAG,EAAE;IAEL,MAAM,UAAU,OAAO,QAAgB;QACrC,IAAI;YACF,MAAM,cAAc;gBAAE;gBAAQ;YAAU;YACxC,aAAa,OAAO,CAAC,uBAAuB,KAAK,SAAS,CAAC;YAC3D,eAAe;YACf,eAAe;YACf,iBAAiB;YACjB,SAAS;QACX,EAAE,OAAO,GAAG;YACV,SAAS;YACT,MAAM;QACR;IACF;IAEA,MAAM,aAAa;QACjB,aAAa,UAAU,CAAC;QACxB,eAAe;QACf,eAAe;QACf,UAAU;IACZ;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GAtFgB","debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/auth/BinanceAuth.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Card } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\n\ninterface BinanceAuthProps {\n  onConnect: (apiKey: string, secretKey: string) => void\n  isConnected: boolean\n  onDisconnect: () => void\n}\n\nexport function BinanceAuth({ onConnect, isConnected, onDisconnect }: BinanceAuthProps) {\n  const [apiKey, setApiKey] = useState(\"\")\n  const [secretKey, setSecretKey] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleConnect = async () => {\n    if (!apiKey || !secretKey) return\n\n    setIsLoading(true)\n    try {\n      // In a real app, you would validate these keys with Binance API\n      // For demo purposes, we'll just simulate the connection\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      onConnect(apiKey, secretKey)\n    } catch (error) {\n      console.error(\"Failed to connect:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (isConnected) {\n    return (\n      <Card className=\"p-6 bg-zinc-800/50 border-zinc-700\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-medium mb-2\">Binance Connected</h3>\n            <p className=\"text-sm text-zinc-400\">\n              Your Binance account is connected and ready for trading\n            </p>\n          </div>\n          <Button\n            variant=\"destructive\"\n            onClick={onDisconnect}\n          >\n            Disconnect\n          </Button>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card className=\"p-6 bg-zinc-800/50 border-zinc-700\">\n      <h3 className=\"text-lg font-medium mb-4\">Connect Binance Account</h3>\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"text-sm text-zinc-400 mb-2 block\">API Key</label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter your Binance API key\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            className=\"bg-zinc-900/50 border-zinc-700\"\n          />\n        </div>\n        <div>\n          <label className=\"text-sm text-zinc-400 mb-2 block\">Secret Key</label>\n          <Input\n            type=\"password\"\n            placeholder=\"Enter your Binance Secret key\"\n            value={secretKey}\n            onChange={(e) => setSecretKey(e.target.value)}\n            className=\"bg-zinc-900/50 border-zinc-700\"\n          />\n        </div>\n        <Button\n          className=\"w-full mt-6\"\n          onClick={handleConnect}\n          disabled={!apiKey || !secretKey || isLoading}\n          size=\"lg\"\n        >\n          {isLoading ? (\n            <span className=\"flex items-center gap-2\">\n              <span className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              Connecting...\n            </span>\n          ) : (\n            \"Connect to Binance\"\n          )}\n        </Button>\n          <p className=\"text-xs text-zinc-400 mt-6\">\n          To get your API keys, go to your Binance account settings and create a new API key with trading permissions.\n          Make sure to store your keys securely and never share them with anyone.\n        </p>\n      </div>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAaO,SAAS,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAoB;;IACpF,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,gBAAgB;QACpB,IAAI,CAAC,UAAU,CAAC,WAAW;QAE3B,aAAa;QACb,IAAI;YACF,gEAAgE;YAChE,wDAAwD;YACxD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;YACjD,UAAU,QAAQ;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;QACtC,SAAU;YACR,aAAa;QACf;IACF;IAEA,IAAI,aAAa;QACf,qBACE,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;sBACd,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAA2B;;;;;;0CACzC,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAIvC,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,SAAS;kCACV;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC;gBAAG,WAAU;0BAA2B;;;;;;0BACzC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAAmC;;;;;;0CACpD,6LAAC,oIAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;gCACzC,WAAU;;;;;;;;;;;;kCAGd,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAAmC;;;;;;0CACpD,6LAAC,oIAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC5C,WAAU;;;;;;;;;;;;kCAGd,6LAAC,qIAAA,CAAA,SAAM;wBACL,WAAU;wBACV,SAAS;wBACT,UAAU,CAAC,UAAU,CAAC,aAAa;wBACnC,MAAK;kCAEJ,0BACC,6LAAC;4BAAK,WAAU;;8CACd,6LAAC;oCAAK,WAAU;;;;;;gCAAiF;;;;;;mCAInG;;;;;;kCAGF,6LAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;;;;;;;AAOpD;GAxFgB;KAAA","debugId":null}},
    {"offset": {"line": 1154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { ChartContainer } from \"@/components/ui/chart\"\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\"\nimport { useInvestmentSimulation } from \"@/hooks/useInvestmentSimulation\"\nimport { useBinanceConnection } from \"@/hooks/useBinanceWallet\"\nimport { BinanceAuth } from \"@/components/auth/BinanceAuth\"\n\nexport default function Home() {\n  const {\n    isConnected,\n    wallet,\n    connect,\n    disconnect,\n    error: walletError\n  } = useBinanceConnection();\n\n  const {\n    portfolio,\n    isSimulating,\n    isLoading,\n    startSimulation,\n    stopSimulation,\n    resetSimulation\n  } = useInvestmentSimulation({\n    binanceWallet: isConnected ? wallet : undefined,\n    isConnected\n  });\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-b from-zinc-900 to-black text-white p-8\">\n      {/* Header */}\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        <BinanceAuth\n          onConnect={connect}\n          isConnected={isConnected}\n          onDisconnect={disconnect}\n        />\n        {walletError && (\n          <div className=\"p-4 bg-red-500/10 border border-red-500/20 rounded-lg text-red-400\">\n            {walletError}\n          </div>\n        )}\n        <div className=\"text-center space-y-4\">\n          <h1 className=\"text-4xl font-bold tracking-tight\">\n            Estratégia de Investimento em Lançamentos Alpha da Binance\n          </h1>\n          <p className=\"text-zinc-400 max-w-2xl mx-auto\">\n            Simulação de investimento com $100 por projeto Alpha, Stop Loss de 50%, \n            Trailing Stop ajustado a cada 200% de valorização. Capital total: $1.000\n          </p>\n        </div>\n\n        {/* Portfolio Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <Card className={`p-6 bg-zinc-800/50 border-zinc-700 transition-all duration-300 ${isLoading ? 'opacity-75' : ''}`}>\n            <h3 className=\"text-lg font-medium mb-2 flex items-center gap-2\">\n              Capital Total\n              {isLoading && (\n                <span className=\"inline-block w-4 h-4 border-2 border-zinc-500 border-t-transparent rounded-full animate-spin\" />\n              )}\n            </h3>\n            <p className=\"text-3xl font-bold font-mono\">\n              ${portfolio.totalCapital.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            </p>\n            <p className=\"text-sm text-zinc-400 mt-2\">Capital inicial: $1,000.00</p>\n          </Card>\n          <Card className={`p-6 bg-zinc-800/50 border-zinc-700 transition-all duration-300 ${isLoading ? 'opacity-75' : ''}`}>\n            <h3 className=\"text-lg font-medium mb-2\">Capital Investido</h3>\n            <p className=\"text-3xl font-bold font-mono\">\n              ${portfolio.investedCapital.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            </p>\n            <p className=\"text-sm text-zinc-400 mt-2\">\n              {((portfolio.investedCapital / portfolio.totalCapital) * 100).toFixed(1)}% do capital total\n            </p>\n          </Card>\n          <Card className={`p-6 bg-zinc-800/50 border-zinc-700 transition-all duration-300 ${isLoading ? 'opacity-75' : ''}`}>\n            <h3 className=\"text-lg font-medium mb-2\">Lucro/Prejuízo</h3>\n            <p className={`text-3xl font-bold font-mono ${portfolio.profit >= 0 ? 'text-green-500' : 'text-red-500'}`}>\n              {portfolio.profit >= 0 ? '+' : ''}${portfolio.profit.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            </p>\n            <p className=\"text-sm text-zinc-400 mt-2\">\n              {((portfolio.profit / 1000) * 100).toFixed(1)}% de retorno\n            </p>\n          </Card>\n        </div>\n\n        {/* Chart */}\n        <Card className={`p-6 bg-zinc-800/50 border-zinc-700 relative ${isLoading ? 'opacity-75' : ''}`}>\n          <h2 className=\"text-xl font-bold mb-4\">Evolução do Portfólio</h2>\n          <p className=\"text-sm text-zinc-400 mb-4\">\n            Acompanhe o desempenho do seu portfólio em tempo real\n          </p>\n          <div className=\"h-[400px] relative\">\n            {isLoading && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black/20 rounded-md z-10\">\n                <div className=\"w-6 h-6 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              </div>\n            )}\n            <ChartContainer\n              config={{\n                portfolio: {\n                  label: \"Valor do Portfólio\",\n                  color: \"#22c55e\",\n                },\n              }}\n            >\n              <LineChart\n                data={portfolio.chartData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid \n                  strokeDasharray=\"3 3\" \n                  stroke=\"rgba(255,255,255,0.1)\"\n                  vertical={false}\n                />\n                <XAxis \n                  dataKey=\"name\" \n                  stroke=\"rgba(255,255,255,0.5)\"\n                  tick={{ fill: 'rgba(255,255,255,0.5)' }}\n                />\n                <YAxis \n                  stroke=\"rgba(255,255,255,0.5)\"\n                  tick={{ fill: 'rgba(255,255,255,0.5)' }}\n                  tickFormatter={(value) => `$${value}`}\n                />\n                <Tooltip \n                  contentStyle={{ \n                    backgroundColor: '#18181b',\n                    border: '1px solid rgba(255,255,255,0.1)',\n                    borderRadius: '8px'\n                  }}\n                  labelStyle={{ color: 'rgba(255,255,255,0.5)' }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  stroke=\"#22c55e\"\n                  strokeWidth={2}\n                  dot={false}\n                  name=\"portfolio\"\n                  activeDot={{ r: 6, fill: \"#22c55e\" }}\n                  animationDuration={500}\n                  isAnimationActive={true}\n                />\n              </LineChart>\n            </ChartContainer>\n          </div>\n        </Card>\n\n        {/* Controls */}\n        <div className=\"flex justify-center gap-4 mt-8\">\n            <Button\n              size=\"lg\"\n              onClick={() => isSimulating ? stopSimulation() : startSimulation()}\n              variant={isSimulating ? \"destructive\" : \"default\"}\n              disabled={isLoading || (!isConnected && !wallet)}\n              className=\"min-w-[180px] relative\"\n            >\n            {isLoading && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black/20 rounded-md\">\n                <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              </div>\n            )}\n            {isSimulating ? \"Parar Simulação\" : \"Iniciar Simulação\"}\n          </Button>\n            <Button\n              size=\"lg\"\n              variant=\"outline\"\n              onClick={resetSimulation}\n              disabled={isSimulating || isLoading || !isConnected}\n            >\n            Reiniciar\n          </Button>\n        </div>\n\n        {/* Trade History */}\n        <Card className={`p-6 bg-zinc-800/50 border-zinc-700 mt-8 relative ${isLoading ? 'opacity-75' : ''}`}>\n          <h2 className=\"text-xl font-bold mb-4\">Histórico de Operações</h2>\n          <p className=\"text-sm text-zinc-400 mb-4 flex items-center gap-2\">\n            Acompanhe todas as operações realizadas durante a simulação\n            {isLoading && (\n              <span className=\"inline-block w-4 h-4 border-2 border-zinc-500 border-t-transparent rounded-full animate-spin\" />\n            )}\n          </p>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b border-zinc-700\">\n                  <th className=\"text-left p-2\">Data</th>\n                  <th className=\"text-left p-2\">Tipo</th>\n                  <th className=\"text-left p-2\">Projeto</th>\n                  <th className=\"text-right p-2\">Valor</th>\n                  <th className=\"text-right p-2\">Resultado</th>\n                </tr>\n              </thead>\n              <tbody>\n                {portfolio.trades.map((trade) => (\n                  <tr key={trade.id} className=\"text-zinc-400\">\n                    <td className=\"p-2\">{trade.date.toLocaleTimeString()}</td>\n                    <td className=\"p-2\">\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        trade.type === 'BUY' \n                          ? 'bg-blue-500/20 text-blue-400'\n                          : trade.type === 'STOP_LOSS'\n                          ? 'bg-red-500/20 text-red-400'\n                          : 'bg-green-500/20 text-green-400'\n                      }`}>\n                        {trade.type === 'BUY' \n                          ? 'Compra' \n                          : trade.type === 'STOP_LOSS'\n                          ? 'Stop Loss'\n                          : 'Trailing Stop'}\n                      </span>\n                    </td>\n                    <td className=\"p-2\">{trade.project}</td>\n                    <td className=\"p-2 text-right font-mono\">${trade.amount.toFixed(2)}</td>\n                    <td className={`p-2 text-right font-mono ${trade.result >= 0 ? 'text-green-500' : 'text-red-500'}`}>\n                      ${trade.result > 0 ? '+' : ''}${trade.result.toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n                {portfolio.trades.length === 0 && (\n                  <tr className=\"text-zinc-400\">\n                    <td className=\"p-2\">-</td>\n                    <td className=\"p-2\">-</td>\n                    <td className=\"p-2\">-</td>\n                    <td className=\"p-2 text-right\">-</td>\n                    <td className=\"p-2 text-right\">-</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </Card>\n      </div>\n    </main>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}